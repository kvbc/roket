"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[601],{5317:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"core_concepts/network_function","title":"Network Function","description":"Examples","source":"@site/docs/core_concepts/network_function.md","sourceDirName":"core_concepts","slug":"/core_concepts/network_function","permalink":"/roket/docs/core_concepts/network_function","draft":false,"unlisted":false,"editUrl":"https://github.com/kvbc/roket/edit/main/docs/core_concepts/network_function.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Network Event","permalink":"/roket/docs/core_concepts/network_event"},"next":{"title":"Network Property","permalink":"/roket/docs/core_concepts/network_property"}}');var a=t(4848),i=t(8453);const o={},l="Network Function",c={},s=[{value:"Examples",id:"examples",level:2},{value:"Server Authority",id:"server-authority",level:3},{value:"Client Authority",id:"client-authority",level:3},{value:"Two-Way Communication",id:"two-way-communication",level:3},{value:"Shared Definition",id:"shared-definition",level:3},{value:"OOP",id:"oop",level:3},{value:"Multiple Files",id:"multiple-files",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"network-function",children:"Network Function"})}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"server-authority",children:"Server Authority"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'-- @ServerStorage/RoketScripts/MathService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal MathService = {\n\tCalcDelta = Roket.NetFunction "MathService.CalcDelta",\n}\n\nfunction MathService.RoketStart()\n--#server\n    MathService.CalcDelta:Define(function(resolveClient, player, a, b, c)\n        local delta = b*b - 4*a*c\n        if player then\n            -- return to client after 2 seconds\n            print(`Calculating delta for {player.Name} with {a}, {b}, and {c}`)\n            task.wait(2)\n            resolveClient(delta, 619)\n        end\n        return delta, 420 -- return to server immediately\n    end)\n    task.wait(2)\n    local a, b, c = 6, 1, 9\n    local delta, other = MathService.CalcDelta(a, b, c)\n    print(`Server delta is {delta} ({other})`)\n--#client\n    local a, b, c = 7, 1, 10\n    print("Waiting for delta calculation ...")\n    task.wait(5)\n    print("That\'s enough! I want my delta!")\n    MathService.CalcDelta(a, b, c):andThen(function(delta, other)\n        print(`My delta is {delta} ({other})`)\n    end)\n--#end\nend\n\nreturn MathService\n'})}),"\n",(0,a.jsx)(n.h3,{id:"client-authority",children:"Client Authority"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"-- @ServerStorage/RoketScripts/SpyService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal SpyService = {\n    GetClientData = Roket.NetFunction \"SpyService.GetClientData\"\n}\n\nfunction SpyService.RoketStart()\n--#client\n    SpyService.GetClientData:Define(function(resolveServer, player, what)\n        if what == 'age' then\n            return resolveServer(9000)\n        elseif what == 'name' then\n            return resolveServer('Mark')\n        end\n    end)\n    local age = SpyService.GetClientData:CallLocal('age')\n    print(`My age is {age} :)`)\n--#server\n    task.wait(5)\n    local firstPlayer = game.Players:GetPlayers()[1] :: Player\n    SpyService.GetClientData(firstPlayer, 'age'):andThen(function(age)\n        print(`Age of {firstPlayer.Name} is {age}`)\n    end)\n\n    task.wait(5)\n    SpyService.GetClientData(game.Players, 'name'):andThen(function(names)\n        print(\"Names of all players are\", names)\n    end)\n--#end\nend\n\nreturn SpyService\n"})}),"\n",(0,a.jsx)(n.h3,{id:"two-way-communication",children:"Two-Way Communication"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"-- @ServerStorage/RoketScripts/PingPongService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal PingPongService = {\n    PingPong = Roket.NetFunction \"PingPong\"\n}\n\nfunction PingPongService.RoketStart()\n--#server\n    PingPongService.PingPong:Define(function(resolveClient, player, what)\n        if player and what == 'ping' then\n            resolveClient('pong')\n        end\n    end)\n    task.wait(3) -- wait a little for players to load\n    PingPongService.PingPong(game.Players, 'pong'):andThen(print)\n--#client\n    PingPongService.PingPong:Define(function(resolveServer, player, what)\n        if what == 'pong' then\n            resolveServer('ping')\n        end\n    end)\n    task.wait(5)\n    PingPongService.PingPong('ping'):andThen(print)\n--#end\nend\n\nreturn PingPongService\n"})}),"\n",(0,a.jsx)(n.h3,{id:"shared-definition",children:"Shared Definition"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'-- @ServerStorage/RoketScripts/SharedService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal SharedService = {\n    Func = Roket.NetFunction "SharedService.Func"\n}\n\nfunction SharedService.RoketStart()\n    SharedService.Func:Define(function(resolve, player: Player?, ...)\n        print("both do this! and have player", player.Name)\n        if Roket.IsClient() then\n            print("but client also prints this")\n        else\n            print("and server this")\n        end\n        resolve("both return same thing")\n    end)\n\n    task.wait(5)\n\n--#server\n    SharedService.Func(game.Players):andThen(function(result)\n        warn("Server got:", result)\n    end)\n--#client\n    SharedService.Func():andThen(function(result)\n        warn("Client got:", result)\n    end)\n--#end\nend\n\nreturn SharedService\n'})}),"\n",(0,a.jsx)(n.h3,{id:"oop",children:"OOP"}),"\n",(0,a.jsx)(n.p,{children:"..."}),"\n",(0,a.jsx)(n.h3,{id:"multiple-files",children:"Multiple Files"}),"\n",(0,a.jsx)(n.p,{children:"..."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);