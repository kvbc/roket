"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[996],{5042:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"core_concepts/network_event/network_function","title":"\ud83e\udde9 Network Functions","description":"Please first familiarize yourself with the workings of Network Events, which Network Functions are based on.","source":"@site/docs/core_concepts/network_event/network_function.md","sourceDirName":"core_concepts/network_event","slug":"/core_concepts/network_event/network_function","permalink":"/roket/docs/core_concepts/network_event/network_function","draft":false,"unlisted":false,"editUrl":"https://github.com/kvbc/roket/edit/main/docs/core_concepts/network_event/network_function.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"\u26a1 Network Events","permalink":"/roket/docs/core_concepts/network_event/"},"next":{"title":"\ud83c\udff7\ufe0f Network Properties","permalink":"/roket/docs/core_concepts/network_event/network_property"}}');var i=t(4848),a=t(8453);const l={},o="\ud83e\udde9 Network Functions",c={},s=[{value:"About",id:"about",level:2},{value:"Load",id:"load",level:2},{value:"Calling the function remotely over the network",id:"calling-the-function-remotely-over-the-network",level:3},{value:"Define",id:"define",level:2},{value:"Call",id:"call",level:2},{value:"Middleware",id:"middleware",level:2},{value:"Examples",id:"examples",level:2},{value:"Server Authority",id:"server-authority",level:3},{value:"Client Authority",id:"client-authority",level:3},{value:"Two-Way Communication",id:"two-way-communication",level:3},{value:"Shared Definition",id:"shared-definition",level:3},{value:"OOP",id:"oop",level:3},{value:"Multiple Files",id:"multiple-files",level:3},{value:"API",id:"api",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-network-functions",children:"\ud83e\udde9 Network Functions"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Please first familiarize yourself with the workings of ",(0,i.jsx)(n.a,{href:"/docs/core_concepts/network_event",children:"Network Events"}),", which Network Functions are based on."]})}),"\n",(0,i.jsx)(n.h2,{id:"about",children:"About"}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsx)(n.h2,{id:"load",children:"Load"}),"\n",(0,i.jsx)(n.h3,{id:"calling-the-function-remotely-over-the-network",children:"Calling the function remotely over the network"}),"\n",(0,i.jsxs)(n.p,{children:["On the client-side, in order to call a server-sided function, simply call your loaded ",(0,i.jsx)(n.code,{children:"NetFunction"})," object."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'    local myFunc = Roket.NetFunction "myfunc"\n    myFunc(...)\n'})}),"\n",(0,i.jsx)(n.p,{children:"In order to obtain the results of this asynchronous call, you must utilize the returned promise created by Roket."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"    myFunc(...):andThen(function(...)\n        print(...)\n    end)\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Roket is using a Promise implementation ",(0,i.jsx)(n.a,{href:"https://eryn.io/roblox-lua-promise/",children:"roblox-lua-promise"}),"\ncreated by ",(0,i.jsx)(n.a,{href:"https://github.com/evaera",children:"evaera"}),".\nRead more on ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Futures_and_promises",children:"Promises"}),"."]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For the client it means to call a server function and await its results with a promise"}),"\n",(0,i.jsx)(n.li,{children:"For the server it means to either call a specific client"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To call a function locally"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On the server, call it as you would a normal function, e.g. ",(0,i.jsx)(n.code,{children:"myFunction(...)"})]}),"\n",(0,i.jsxs)(n.li,{children:["On the client, use the ",(0,i.jsx)(n.code,{children:":CallLocal()"})," method, e.g. ",(0,i.jsx)(n.code,{children:"myFunction:CallLocal(...)"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"When calling the function locally, actual return values are returned instead of a promise"}),"\n",(0,i.jsx)(n.h2,{id:"define",children:"Define"}),"\n",(0,i.jsx)(n.h2,{id:"call",children:"Call"}),"\n",(0,i.jsx)(n.h2,{id:"middleware",children:"Middleware"}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"server-authority",children:"Server Authority"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- @ServerStorage/RoketScripts/MathService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal MathService = {\n\tCalcDelta = Roket.NetFunction "MathService.CalcDelta",\n}\n\nfunction MathService.RoketStart()\n--#server\n    MathService.CalcDelta:Define(function(resolveClient, player, a, b, c)\n        local delta = b*b - 4*a*c\n        if player then\n            -- return to client after 2 seconds\n            print(`Calculating delta for {player.Name} with {a}, {b}, and {c}`)\n            task.wait(2)\n            resolveClient(delta, 619)\n        end\n        return delta, 420 -- return to server immediately\n    end)\n    task.wait(2)\n    local a, b, c = 6, 1, 9\n    local delta, other = MathService.CalcDelta(a, b, c)\n    print(`Server delta is {delta} ({other})`)\n--#client\n    local a, b, c = 7, 1, 10\n    print("Waiting for delta calculation ...")\n    task.wait(5)\n    print("That\'s enough! I want my delta!")\n    MathService.CalcDelta(a, b, c):andThen(function(delta, other)\n        print(`My delta is {delta} ({other})`)\n    end)\n--#end\nend\n\nreturn MathService\n'})}),"\n",(0,i.jsx)(n.h3,{id:"client-authority",children:"Client Authority"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- @ServerStorage/RoketScripts/SpyService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal SpyService = {\n    GetClientData = Roket.NetFunction \"SpyService.GetClientData\"\n}\n\nfunction SpyService.RoketStart()\n--#client\n    SpyService.GetClientData:Define(function(resolveServer, player, what)\n        if what == 'age' then\n            return resolveServer(9000)\n        elseif what == 'name' then\n            return resolveServer('Mark')\n        end\n    end)\n    local age = SpyService.GetClientData:CallLocal('age')\n    print(`My age is {age} :)`)\n--#server\n    task.wait(5)\n    local firstPlayer = game.Players:GetPlayers()[1] :: Player\n    SpyService.GetClientData(firstPlayer, 'age'):andThen(function(age)\n        print(`Age of {firstPlayer.Name} is {age}`)\n    end)\n\n    task.wait(5)\n    SpyService.GetClientData(game.Players, 'name'):andThen(function(names)\n        print(\"Names of all players are\", names)\n    end)\n--#end\nend\n\nreturn SpyService\n"})}),"\n",(0,i.jsx)(n.h3,{id:"two-way-communication",children:"Two-Way Communication"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- @ServerStorage/RoketScripts/PingPongService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal PingPongService = {\n    PingPong = Roket.NetFunction \"PingPong\"\n}\n\nfunction PingPongService.RoketStart()\n--#server\n    PingPongService.PingPong:Define(function(resolveClient, player, what)\n        if player and what == 'ping' then\n            resolveClient('pong')\n        end\n    end)\n    task.wait(3) -- wait a little for players to load\n    PingPongService.PingPong(game.Players, 'pong'):andThen(print)\n--#client\n    PingPongService.PingPong:Define(function(resolveServer, player, what)\n        if what == 'pong' then\n            resolveServer('ping')\n        end\n    end)\n    task.wait(5)\n    PingPongService.PingPong('ping'):andThen(print)\n--#end\nend\n\nreturn PingPongService\n"})}),"\n",(0,i.jsx)(n.h3,{id:"shared-definition",children:"Shared Definition"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- @ServerStorage/RoketScripts/SharedService\n\nlocal Roket = require(game.ReplicatedStorage.Packages.Roket)\n\nlocal SharedService = {\n    Func = Roket.NetFunction "SharedService.Func"\n}\n\nfunction SharedService.RoketStart()\n    SharedService.Func:Define(function(resolve, player: Player?, ...)\n        print("both do this! and have player", player.Name)\n        if Roket.IsClient() then\n            print("but client also prints this")\n        else\n            print("and server this")\n        end\n        resolve("both return same thing")\n    end)\n\n    task.wait(5)\n\n--#server\n    SharedService.Func(game.Players):andThen(function(result)\n        warn("Server got:", result)\n    end)\n--#client\n    SharedService.Func():andThen(function(result)\n        warn("Client got:", result)\n    end)\n--#end\nend\n\nreturn SharedService\n'})}),"\n",(0,i.jsx)(n.h3,{id:"oop",children:"OOP"}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsx)(n.h3,{id:"multiple-files",children:"Multiple Files"}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/api/NetFunction",children:"API"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const i={},a=r.createContext(i);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);